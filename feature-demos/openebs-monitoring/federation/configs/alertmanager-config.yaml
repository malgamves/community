apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
data:
  config.yml: |-
    global:
      
      # ResolveTimeout is the time after which an alert is declared resolved
      # if it has not been updated.
      resolve_timeout: 5m
      # Replace the given api url by your slack webhook url.        
      slack_api_url: 'https://hooks.slack.com/services/Token'

    # The directory from which notification templates are read.
    templates:
    - '/alertmanager/templates/slack.tmpl'
    
    # The root route on which each incoming alert enters.
    route:
      # The labels by which incoming alerts are grouped together. For example,
      # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
      # be batched into a single group.
      group_by: ['alertname', 'cluster', 'service']
      
      # When a new group of alerts is created by an incoming alert, wait at
      # least 'group_wait' to send the initial notification.
      # This way ensures that you get multiple alerts for the same group that start
      # firing shortly after another are batched together on the first
      # notification.
      group_wait: 10s
      
      # When the first notification was sent, wait 'group_interval' to send a batch
      # of new alerts that started firing for that group.
      
      group_interval: 1m
      
      # If an alert has successfully been sent, wait 'repeat_interval' to
      # resend them.
      repeat_interval: 1m
      
      receiver: slack_general
      
      routes:
      - match:
          severity: 'warning'
        receiver: slack_general

    receivers:
    - name: slack_general
      slack_configs:
      # channel name where webhook integrated       
      - channel: '#alert'
        text: "<!here>{{ range .Alerts }}\nInstance: {{ .Labels.instance }}\n {{ end }}"
        
